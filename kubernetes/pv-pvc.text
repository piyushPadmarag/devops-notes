apiVersion: v1
kind: PersistentVolume 
metadata:
  name: host-pv 
spec:
  capacity: 
    storage: 10Gi
  volumeMode: Filesystem
  accessMode: 
    - ReadWriteOnce
  hostPath:
    path: /data
    type: DirectoryOrCreate

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: host-pvc 
spec:
  volumeName: host-pv 
  accessModes: 
    - ReadWriteOnce
  resources: 
    storage: 2G

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: story-deployment
spec:
  replicas: 1
  selector: 
    matchLabels: 
      app: story
  template:
    metadata:
      labels:
        app: story
    spec:
      containers:
        - name: story
          image: story-image
          volumeMounts: 
            - mountPath: /tmp
              name: story-volume
      volumes:
        - name: story-volume
          hostPath: 
            path: /volume
            persistentVolumeClaim: 
              claimName: host-pvc


we can claim a pv by name or also by resource(DYNAMIC volume PROVISIONINNG)
state is data created and used by your app which must not be lost(user data, user accouts etc)
PV are stand alone cluster resource, claimed by pods via pvc
can be defined defined once and used multiple times


https://kubernetes.io/docs/concepts/storage/persistent-volumes/